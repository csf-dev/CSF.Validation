<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="AccessorFunctionMustNotBeNull" xml:space="preserve">
    <value>The accessor function must not be null.</value>
	</data>
  <data name="MinMustNotBeGreaterThanMax" xml:space="preserve">
    <value>Impossible validation rule: The minimum must not be greater than the maximum.</value>
  </data>
  <data name="LengthMustNotBeNegative" xml:space="preserve">
    <value>Impossible validation rule: A minimum or maximum length must not be negative.</value>
  </data>
  <data name="DependencyMustHaveAResult" xml:space="preserve">
    <value>The dependency rule must have a result.</value>
  </data>
  <data name="RuleMayNotBeExecuted" xml:space="preserve">
    <value>The rule is not marked as ready for execution.</value>
  </data>
  <data name="RuleMustHaveAResult" xml:space="preserve">
    <value>The rule must have a result; please check {0} first.</value>
  </data>
  <data name="ProvideDependenciesMayOnlyBeCalledOnce" xml:space="preserve">
    <value>The {0} method may only be called once for a given `{1}' instance.</value>
  </data>
  <data name="DependenciesCannotBeRetrievedUntilProvided" xml:space="preserve">
    <value>The {0} method may only be called after {1} has been used to provide the dependencies.</value>
  </data>
  <data name="SomeValidationRulesCouldNotBeRun" xml:space="preserve">
    <value>Validation has stalled - one or more validation rules have yet to be executed but there are none in the validation run which report that they may be.</value>
  </data>
  <data name="ParentRuleIdentityMustBeTypeOrNull" xml:space="preserve">
    <value>The identity of the parent validation rule must be either an instance of `{0}' or it must be null.</value>
  </data>
  <data name="MemberMustBelongToValidatedType" xml:space="preserve">
    <value>The member must belong to the validated type `{0}'.
Member name: {1}</value>
  </data>
  <data name="ValueTypeConversionFailureFormat" xml:space="preserve">
    <value>The value provided to the current 'value' validation rule must be of an appropriate type.
Expected type:`{0}'
Actual type:{1}</value>
  </data>
  <data name="ValidatedObjectTypeConversionFailureFormat" xml:space="preserve">
    <value>The object under validation, provided to the current validation rule, must be of an appropriate type.
Expected type:`{0}'
Actual type:{1}</value>
  </data>
</root>
